 text←{enforce}(CheckFn AskForText)question;flag;alias;bool;buff;success
⍝ Operator asking a question and allowing the user to enter text.\\
⍝ By entering "`∘∘∘`" the user may interrupt `AskForText`: this activates a stop.\\
⍝ `CheckFn` is supposed to be a function that gets the input as `⍵` and must return a Boolean
⍝ with a 1 indicating that the input is okay and 0 that it is not. If you don't need/want
⍝ a check function pass `{1}` as left operand.\\
⍝ If the user refuses to enter anything an empty vector is returned.
⍝ However, you might prevent this from happening by specifying a 1 as `⍺` (`enforce`), meaning that
⍝ the user must enter something in order to continue.
 enforce←{0<⎕NC ⍵:⍎⍵ ⋄ 0}'enforce'
 'The question must contain neither a carriage return nor a line feed'Assert∧/~(⎕UCS 10 13)∊question
 text←''
 success←flag←0
 question←{⍵↓⍨+/∧\' '=⍵}question
 :Repeat
     :If 0<⎕NC'AskForText_Answers'
         AskForText_Answers←(0<≢¨' '~⍨¨AskForText_Answers[;1])⌿AskForText_Answers
         AskForText_Answers[;1]←{⍵↓⍨+/∧\' '=⍵}¨AskForText_Answers[;1]
     :AndIf 0<≢AskForText_Answers
         :If AliasChar∊question
             (alias question)←{l←⍵⍳AliasChar ⋄ (l↑⍵)(l↓⍵)}question
             flag←0<+/bool←({⍵↑⍨⍵⍳AliasChar}¨AskForText_Answers[;1])≡¨⊂alias
         :ElseIf ~flag←0<+/bool←AskForText_Answers[;1]≡¨⊂question
             flag←0<+/bool←question∘{⍵≡(≢⍵)↑⍺}¨AskForText_Answers[;1]
         :EndIf
         :If flag
             'Multiple pre-prepared answers qualify?!'Assert 1=+/bool
             text←2⊃AskForText_Answers[bool⍳1;]
         :EndIf
     :EndIf
     :If ~flag
         text←⍞,0/⍞←question,': '
         :If '∘∘∘'≡¯3↑text
             (1+⊃⎕LC)⎕STOP⊃⎕SI
             ∘∘∘ ⍝ Deliberate stop caused by user input
         :EndIf
         text←(2+≢question)↓text  ⍝ Plus 2 for the appended ": "
     :EndIf
     :If 0=≢text
         :If enforce
             ⎕←'You must enter something!'
         :Else
             :Return
         :EndIf
     :Else
         success←CheckFn text
     :EndIf
 :Until success
⍝Done
